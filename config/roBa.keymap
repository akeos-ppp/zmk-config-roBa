#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100   //スクロール量
#define MOUSE 1

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp NON_US_HASH>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp RS(LPAR)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 AMPERSAND>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        l {
            bindings = <&kp RPAR>;
            key-positions = <13 14>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mission: mission {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(UP)>;

            label = "MISSION";
        };

        launchpad: launchpad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(LA(L))>;

            label = "LAUNCHPAD";
        };

        capture: capture {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(LS(N5))>;

            label = "CAPTURE";
        };

        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(D))>;

            label = "LEFT";
        };

        center: center {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(F))>;

            label = "CENTER";
        };

        right: right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(G))>;

            label = "RIGHT";
        };

        left_two: left_two {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(E))>;

            label = "LEFT_TWO";
        };

        right_two: right_two {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(T))>;

            label = "RIGHT_TWO";
        };
    };

    //新たな動作を定義する

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E      &kp R                       &kp T                                                                     &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D      &kp F                       &kp G        &kp LS(LG(S))                  &kp DOUBLE_QUOTES             &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C      &kp V                       &kp B        &kp ESC                        &kp SEMICOLON                 &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp TAB           &kp LEFT_ALT  &kp LCTRL  &lt_to_layer_0 4 BACKSPACE  &lt 2 SPACE  &lt_to_layer_0 5 LANGUAGE_1    &mt RIGHT_COMMAND LANGUAGE_2  &lt 3 ENTER                             &kp EQUAL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &capture  &trans  &mkp MB1  &mo 6       &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &mission  &launchpad  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans                                  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &kp F12
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_3 {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                 &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))    &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                  &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &kp KP_NUMBER_0  &trans           &trans           &trans        &trans                     &trans          &trans                                                                     &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_4 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))     &kp UP_ARROW    &kp LC(TAB)          &trans                        &trans  &trans  &trans  &trans  &trans
&left_two       &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &right_two  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LC(LEFT_ARROW)  &trans          &kp LC(RIGHT_ARROW)  &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans
&left           &center             &right          &trans               &trans      &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };
    };
};
